---
version: "2"

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  worker_data:

services:
  postgres:
    image: postgres:10.1-alpine
    restart: unless-stopped
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./initdb.sql:/docker-entrypoint-initdb.d/initdb.sql

  redis:
    image: redis:4.0.6-alpine
    restart: unless-stopped
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  scheduler:
    image: ${AIRFLOW_IMAGE}:${AIRFLOW_IMAGE_TAG}
    command: ["airflow", "scheduler"]
    restart: unless-stopped
    user: astro
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
      io.astronomer.docker.component: "airflow-scheduler"
    depends_on:
      - postgres
      - redis
      - statsd-exporter
    env_file:
      - airflow.env
    volumes:
      - $AIRFLOW_HOME/dags:/usr/local/airflow/dags:ro
      - $AIRFLOW_HOME/plugins:/usr/local/airflow/plugins:ro
      - $AIRFLOW_HOME/incubator-airflow/airflow:/usr/lib/python3.6/site-packages/airflow:ro

  webserver:
    image: ${AIRFLOW_IMAGE}:${AIRFLOW_IMAGE_TAG}
    command: ["airflow", "webserver"]
    restart: unless-stopped
    user: astro
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
      io.astronomer.docker.component: "airflow-webserver"
    depends_on:
      - scheduler # Wait for scheduler to avoid race to init db in entrypoint.sh
      - postgres
      - redis
    env_file:
      - airflow.env
    ports:
      - "8080:8080"
    volumes:
      - $AIRFLOW_HOME/dags:/usr/local/airflow/dags:ro
      - $AIRFLOW_HOME/plugins:/usr/local/airflow/plugins:ro

  worker:
    image: ${AIRFLOW_IMAGE}:${AIRFLOW_IMAGE_TAG}
    command: ["airflow", "worker"]
    restart: unless-stopped
    user: astro
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
      io.astronomer.docker.component: "airflow-worker"
    depends_on:
      - postgres
      - redis
      - scheduler
    env_file:
      - airflow.env
    volumes:
      - $AIRFLOW_HOME/dags:/usr/local/airflow/dags:ro
      - $AIRFLOW_HOME/plugins:/usr/local/airflow/plugins:ro
      - worker_data:/usr/local/airflow/logs

  worker-gc:
    image: ${AIRFLOW_IMAGE}:${AIRFLOW_IMAGE_TAG}
    restart: unless-stopped
    command: ["crond", "-f", "-d", "0"]
    environment:
      ASTRONOMER__AIRFLOW__WORKER_LOGS_RETENTION_DAYS: 1
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
      io.astronomer.docker.component: "airflow-worker-gc"
    volumes:
      - worker_data:/usr/local/airflow/logs

  flower:
    image: ${AIRFLOW_IMAGE}:${AIRFLOW_IMAGE_TAG}
    command: ["airflow", "flower"]
    restart: unless-stopped
    user: astro
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
      io.astronomer.docker.component: "airflow-flower"
    depends_on:
      - postgres
      - redis
    env_file:
      - airflow.env
    ports:
      - "5555:5555"

  statsd-exporter:
    image: astronomerinc/ap-statsd-exporter:latest
    command:
      - "-statsd.mapping-config=/etc/statsd-exporter/mappings.yml"
    restart: unless-stopped
    depends_on:
      - prometheus
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
    ports:
      - "9102:9102"

  prometheus:
    image: astronomerinc/ap-prometheus:latest
    command:
      - "--config.file=/etc/prometheus/config/docker-compose.yml"
      - "--storage.tsdb.path=/prometheus"
    restart: unless-stopped
    labels:
      io.astronomer.docker: "true"
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus

  grafana:
    image: astronomerinc/ap-grafana:latest
    restart: unless-stopped
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_DATABASE_URL: postgres://grafana:grafana@postgres:5432/grafana
    depends_on:
      - postgres
      - prometheus
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
    ports:
      - "3000:3000"
    volumes:
      - ./datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml

  cadvisor:
    image: astronomerinc/ap-cadvisor:latest
    restart: unless-stopped
    labels:
      io.astronomer.docker: "true"
      io.astronomer.docker.open: "true"
    ports:
      - "8081:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
